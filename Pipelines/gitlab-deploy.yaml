stages:
  - validate
  - lint
  - test
  - plan
  - apply

variables:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  AWS_REGION: "us-east-1"

default:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

# Checkout & Terraform Valid  ate
validate:
  stage: validate
  image: hashicorp/terraform:1.9
  script:
    - terraform init
    - terraform fmt -check
    - terraform validate

# TFLint (fail on warnings)
tflint:
  stage: lint
  image: golang:1.22
  script:
    - go install github.com/terraform-linters/tflint@latest
    - $(go env GOPATH)/bin/tflint --init
    - $(go env GOPATH)/bin/tflint --error-with-issues -f compact

# Tfsec security scan
tfsec:
  stage: lint
  image: aquasec/tfsec:latest
  script:
    - tfsec --minimum-severity HIGH --format compact --out tfsec-report.json
  artifacts:
    paths:
      - tfsec-report.json
    when: always

# Go unit tests
unit_tests:
  stage: test
  image: golang:1.22
  script:
    - cd ./test
    - go test -v ./...

# Terraform plan (upload artifact for apply stage)
plan:
  stage: plan
  image: hashicorp/terraform:1.9
  script:
    - terraform init
    - terraform plan -out=tfplan
  artifacts:
    paths:
      - tfplan

# Terraform apply (only after plan approval in UI if desired)
apply:
  stage: apply
  image: hashicorp/terraform:1.9
  script:
    - terraform apply -auto-approve tfplan
  dependencies:
    - plan
